ðŸŒŠ Memory map WAVE files into numpy arrays ðŸŒŠ



Reads and writes 8-bit, 16-bit, 32-bit and 64-bit integer WAVE files
as well as 32-bit and

The actual samples from a WAVE file appear as entries in a numpy array.

See documentation for numpy.memmap

If you open the file in 'r+' mode, you can even rewrite the samples on
disk that way.

API
===

``wavemap.WaveMap(filename, mode='r', *args, **kwargs)``
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(`wavemap/__init__.py, 37-49 <https://github.com/rec/wavemap/blob/master/wavemap/__init__.py#L37-L49>`_)

Memory a map WAVE file to a ``numpy`` array

Return an instance of ``ReadMap`` or ``WriteMap``, depending on
``mode``.

See the documentation of ``ReadMap`` or ``WriteMap`` for full signatures.

Class ``wavemap.RawMap``
~~~~~~~~~~~~~~~~~~~~~~~~

(`wavemap/raw.py, 14-78 <https://github.com/rec/wavemap/blob/master/wavemap/raw.py#L14-L78>`_)

"Memory map raw audio data from a disk file into a numpy matrix

Class ``wavemap.ReadMap``
~~~~~~~~~~~~~~~~~~~~~~~~~

(`wavemap/read.py, 17-109 <https://github.com/rec/wavemap/blob/master/wavemap/read.py#L17-L109>`_)

Memory-map an existing WAVE file into a numpy vector or matrix

``wavemap.ReadMap.__new__()``
_____________________________

.. code-block:: python

  wavemap.ReadMap.__new__(
       cls,
       filename,
       mode='r',
       order=None,
       always_2d=False,
       allow_conversion=True,
       warn='<function warn: print to stderr>',
  )

(`wavemap/read.py, 20-109 <https://github.com/rec/wavemap/blob/master/wavemap/read.py#L20-L109>`_)

Memory-map an existing WAVE file into a numpy matrix

ARGUMENTS
  filename:
    the name of the file being mapped

  mode:
    The file is opened in this mode.  Must be one of ``{MODES}``.
    Default is ``'r'``.

  order:
    Samples usually get laid out in into a ``numpy.darray`` with``
    shape=(N, C)`` where ``N`` is the number of audio frames, and ``C`` is
    the number of channels.

    This is called column major order, but this can be toggled by
    setting the ``order`` parameter to ``F`` for Fortan or row-major row.

    See https://stackoverflow.com/questions/27266338/

  always_2d:
    If ``False``, the default, mono WAVE files with only one channel
    get special treatment and are mapped to a one-dimensional vector
    with ``size=(N,)``.

    If ``True``, mono WAVE files are treated the same as any other file
    and are mapped to a two-dimensional matrix with ``size=(N, 1)``.

Class ``wavemap.WriteMap``
~~~~~~~~~~~~~~~~~~~~~~~~~~

(`wavemap/write.py, 10-96 <https://github.com/rec/wavemap/blob/master/wavemap/write.py#L10-L96>`_)

"Memory-map a new wave file

``wavemap.WriteMap.__new__()``
______________________________

.. code-block:: python

  wavemap.WriteMap.__new__(
       cls,
       filename,
       dtype,
       shape,
       sample_rate,
       roffset=0,
       warn='<function warn: print to stderr>',
  )

(`wavemap/write.py, 13-76 <https://github.com/rec/wavemap/blob/master/wavemap/write.py#L13-L76>`_)

ARGUMENTS
  roffset:
    How many bytes in the file after the WAV data chunk

(automatically generated by `doks <https://github.com/rec/doks/>`_ on 2021-01-12T12:56:08.361551)
